<html window-frame="solid-with-shadow" theme="dark" window-resizable window-frame="none">
	<head>
		<title>D3pixelbot canvas viewer</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<style>
			@import url("styles/flat-theme.css");
			@import url("prototypes/pixcanvas/pixcanvas.css");
			
            html {
				background: transparent;
			}
			
			body {
				flow:	"1 2";
				font:system;
				margin: 0;
			}

			#sidebar {
				padding: 2em;
			}

			#sidebar > span {
				font-size: 1.5em;
			}

			form { flow: row(label, select input output div textarea button); border-spacing: 6dip;}
			form > label { padding:4dip; white-space:nowrap; horizontal-align:right; }

			pixcanvas {
				background-color: rgba(0, 0, 0, 0.25);
				width: *;
				height: *;
			}
			
		</style>
		<script type="text/tiscript">
			var pc = $(pixcanvas);

			$(#zoom).on("change",function() {
				pc.setZoom(this.value-2)
			});

			function processEvents(events) {
				pc.eventHandler(events); // Froze after 10 minutes, 7 minutes
				//pc.post(::pc.eventHandler(events)); // Froze after 30 minutes, 5 minutes
				/*var bla = 0; // Didn't freeze
				for (var i = 0; i < 10000; i++){
					bla += Math.sin(i);
				}*/
			}

			function self.ready() {
				//view.connectToInspector();
			}

			function self.closing() {
				pc.remove(); // So detached is called
				//view.signalClosed();
			}
		</script>
	</head>
	
	<body>

		<div#sidebar>
			<span>Canvas</span>
			<form#data>
				<label>Players: </label>
				<output|Integer(playerCount)/>
				<label>Zoom:</label>
				<input|hslider #zoom min=0 max=4 value=2 />
			</form>
		</div>
		
		<pixcanvas>
			<div.canvasContainer>
				<div.chunkContainer>
					<!--<img style="width:128px; height:64px; top: 1000000px; left: 1000000px; background-color: beige">-->
				</div>
			</div>
		</pixcanvas>
		
	</body>
	
</html>
